var dialogOn = false;
var textline;

function dialog_window() {
    document.body.innerHTML += `
        <div id='dialog' class='dialog'>
            <div class='label' onclick='openDialog()'>Жмак, чтобы закрыть!</div>
            <div class='question'>
                <input class='form__input' id='Qdialog' placeholder='За спрос не бьют' />
                <label class='form__label' for='Qdialog'>За спрос не бьют</label>
                <button class='btn' onclick='ask("Qdialog")'>Спросить</button>
            </div>
            <div class='history_title'>История:</div>
            <div class='history' id='history'></div>
            <button class='btn' onclick='showKnowledgeBase()'>База знаний</button>
            <div id='knowledgeBase' class='knowledgeBase' style='display:none;'></div>
        </div>`;

    initVoiceInput();
    initImageModal();
    initKnowledgeBase();
}

function initImageModal() {
    const images = document.querySelectorAll('.theory img');
    const modal = document.getElementById('imgModal');
    const fullImg = document.getElementById('fullImg');
    const closeBtn = document.querySelector('.close');

    let isImageModalOpen = false;

    images.forEach(img => {
        img.addEventListener('click', () => {
            if (!isImageModalOpen) {
                fullImg.src = img.src;
                modal.style.display = 'flex';
                setTimeout(() => {
                    modal.classList.add('show');
                    isImageModalOpen = true;
                }, 10);
            }
        });
    });

    closeBtn.addEventListener('click', () => {
        modal.classList.remove('show');
        setTimeout(() => {
            modal.style.display = 'none';
            isImageModalOpen = false;
        }, 300);
    });

    window.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.remove('show');
            setTimeout(() => {
                modal.style.display = 'none';
                isImageModalOpen = false;
            }, 300);
        }
    });
    
    window.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            modal.classList.remove('show');
            setTimeout(() => {
                modal.style.display = 'none';
            }, 300);
        }
    });
}
function initKnowledgeBase() {
    const knowledgeBaseButton = document.querySelector('.btn');
    const knowledgeBaseDiv = document.getElementById('knowledgeBase');
    const modal = document.getElementById('imgModal');

    knowledgeBaseButton.addEventListener('click', () => {
        const isImageModalOpen = modal.style.display === 'flex';
        if (isImageModalOpen) {
            modal.classList.remove('show');
            setTimeout(() => {
                modal.style.display = 'none';
            }, 300);
        }

        knowledgeBaseDiv.style.display = (knowledgeBaseDiv.style.display === "none") ? "block" : "none";
    });
}
function openDialog() {
    if (dialogOn) {
        $("#dialog").animate({ "margin-left": "109%" }, 1000);
        dialogOn = false;
    } else {
        $("#dialog").animate({ "margin-left": "60%" }, 1000);
        dialogOn = true;
    }
}

var endings = [
    ["ет", "(ет|ут|ют)"], ["ут", "(ет|ут|ют)"], ["ют", "(ет|ут|ют)"],
    ["ит", "(ит|ат|ят)"], ["ат", "(ит|ат|ят)"], ["ят", "(ит|ат|ят)"],
    ["ется", "(ет|ут|ют)ся"], ["утся", "(ет|ут|ют)ся"], ["ются", "(ет|ут|ют)ся"],
    ["ится", "(ит|ат|ят)ся"], ["атся", "(ит|ат|ят)ся"], ["ятся", "(ит|ат|ят)ся"],
    ["ен", "ен"], ["ена", "ена"], ["ено", "ено"], ["ены", "ены"],
    ["ан", "ан"], ["ана", "ана"], ["ано", "ано"], ["аны", "аны"],
    ["жен", "жен"], ["жна", "жна"], ["жно", "жно"], ["жны", "жны"],
    ["на", "на"], ["но", "но"],
    ["такое", "- это"]
];

let blacklist = ["замена", "замены", "атрибут", "маршрут", "света жук в моём чс", "член", "нет"];

function showKnowledgeBase() {
    var knowledgeBaseDiv = document.getElementById("knowledgeBase");
    knowledgeBaseDiv.style.display = (knowledgeBaseDiv.style.display === "none") ? "block" : "none";

    if (knowledgeBaseDiv.style.display === "block") {
        knowledgeBaseDiv.innerHTML = "";

        for (let i = 0; i < questions.length; i++) {
            knowledgeBaseDiv.innerHTML += `
            <div class='knowElement'>
            <strong>${questions[i]}</strong> <br> ${knowledgeBase[i][0]} ${knowledgeBase[i][1]} ${knowledgeBase[i][2]}
            </div>`;
        }
    }
}

function getEnding(word) {
    if (blacklist.indexOf(word) !== -1) return -1;
    for (var j = 0; j < endings.length; j++) {
        if (word.endsWith(endings[j][0])) {
            return j;
        }
    }
    return -1;
}

function big(str) {
    return str.substring(0, 1).toUpperCase() + str.substring(1);
}

function small(str) {
    return str.substring(0, 1).toLowerCase() + str.substring(1);
}

function getAnswer(question) {
    let text = question.toLowerCase();
    let separators = "'\",.!?()[]\\/";
    var result = false;
    var answer = "";

    for (let i = 0; i < separators.length; i++)
        text = text.replace(separators[i], " " + separators[i]);

    var words = text.split(' ');

    for (var i = 0; i < words.length; i++) {
        var ending = getEnding(words[i]);
        var predicate;
        if (ending >= 0) {
            words[i] = words[i].slice(0, -endings[ending][0].length) + endings[ending][1];
            predicate = new RegExp(words[i]);

            var subject_string = words.slice(i + 1).join(".*");
            if (subject_string.length > 3) {
                var subject = new RegExp(".*" + subject_string + ".*");

                for (var j = 0; j < knowledgeBase.length; j++) {
                    if (predicate.test(knowledgeBase[j][1].toLowerCase()) &&
                        (subject.test(knowledgeBase[j][0].toLowerCase()) || subject.test(knowledgeBase[j][2].toLowerCase()))) {
                        answer += small(knowledgeBase[j][0]) + " " + knowledgeBase[j][1] + " " + knowledgeBase[j][2] + ". ";
                        result = true;
                    }
                }
            }
        }
    }

    if (!result) {
        var subject_string = words.slice(i + 1).join(".*");

        if (subject_string.length > 3) {
            var subject = new RegExp(".*" + subject_string + ".*");

            for (var j = 0; j < knowledgeBase.length; j++) {
                if (subject.test(knowledgeBase[j][0].toLowerCase()) || subject.test(knowledgeBase[j][2].toLowerCase())) {
                    answer += small(knowledgeBase[j][0]) + " " + knowledgeBase[j][1] + " " + knowledgeBase[j][2] + ". ";
                    result = true;
                }
            }
        }
    }

    if (!result) answer = "Ответ не найден.";
    return answer;
}

function ask(questionInput) {
    var question = document.getElementById(questionInput).value;
    var answer = getAnswer(question);

    var questionDiv = document.createElement("div");
    questionDiv.className = 'question';
    questionDiv.innerHTML = question;
    document.getElementById("history").appendChild(questionDiv);

    var answerDiv = document.createElement("div");
    answerDiv.className = 'answer';
    answerDiv.innerHTML = answer;

    answerDiv.innerHTML += `
    <audio controls='true' autoplay='true' 
    src='http://tts.voicetech.yandex.net/generate?format=wav&lang=ru-RU&key=4a4d3a13-d206-45fc-b8fb-e5a562c9f587&text=${encodeURIComponent(answer)}'></audio>`;

    document.getElementById("history").appendChild(answerDiv);

    document.getElementById("history").scrollTop = document.getElementById("history").scrollHeight;

    document.getElementById(questionInput).value = "";
}

function initVoiceInput() {
    window.ya.speechkit.settings.apikey = "AQVN0IxsbVifQUx5_xIkBQOg2G5xWChzDKoZpks2";

    textline = new ya.speechkit.Textline("Qdialog", {
        onInputFinished: function (text) {
            document.getElementById("Qdialog").value = text;
            ask("Qdialog");
        },
        onError: function (error) {
            console.error("Ошибка во время голосового ввода:", error);
        }
    });
}

var knowledgeBase = [
    ["Робот-собака", "активируется", "специальным жестом."],
    ["Пользователь", "должен коснуться", "носа и правого уха."],
    ["Система", "запускается", "в течение 10 секунд."],
    ["Световой индикатор", "загорается", "синим цветом."],
    ["Глаза робота", "начинают светиться", "плавно."],
    ["Механизмы", "приводятся", "в рабочее состояние."],
    ["Вы", "будете знать", "что батарея исчерпана, когда робот собака будет двигаться очень медленно или становится менее чувствительным к вашим командам и/или командам дистанционного управления."],

    ["Кнопка 'Вперед'", "заставляет", "собаку двигаться прямо."],
    ["Джойстик", "контролирует", "направление движения."],
    ["Триггеры", "регулируют", "скорость перемещения."],
    ["Красная кнопка", "переводит", "собаку в положение 'сидеть'."],
    ["Зеленая кнопка", "активирует", "команду 'лежать'."],
    ["Синяя кнопка", "возвращает", "собаку в стоячее положение."],
    ["Клавиша 'W'", "запускает", "движение вперед."],
    ["Клавиша 'S'", "активирует", "движение назад."],
    ["Клавиши 'A' и 'D'", "поворачивают", "собаку влево и вправо."],
    ["Клавиша 'Space'", "переводит", "собаку в режим сидения."],
    ["Клавиша 'C'", "укладывает", "собаку на пол."],
    ["Клавиша 'X'", "поднимает", "собаку в стоячее положение."],

    ["Робот", "поддерживает", "автономный режим."],
    ["Система", "следует", "за владельцем самостоятельно."],
    ["Алгоритмы", "обеспечивают", "безопасное передвижение."],
    ["Собака", "имеет", "режим охраны."],
    ["Сенсоры", "отслеживают", "движение в помещении."],
    ["Система", "оповещает", "владельца о нарушениях."],
    ["Глаза робота", "отображают", "текущий заряд."],
    ["Глаза робота", "сломались", "и больше не отображают заряд."],
    ["Уши", "передают", "эмоциональное состояние."],
    ["Положение ушей", "зависит", "от режима работы."],
    ["Движения", "имитируют", "поведение живой собаки."],

    ["Владелец", "должен очищать", "сенсоры регулярно."],
    ["Система", "требует", "ежемесячной калибровки."],
    ["Обновления", "устанавливаются", "автоматически."],
    ["Аккумулятор", "заряжается", "беспроводным способом."],
    ["Зарядка", "занимает", "четыре часа."],
    ["Полный заряд", "обеспечивает", "сутки работы."],

    ["Тройное касание носа", "перезагружает", "систему."],
    ["Длительное удержание уха", "выключает", "робота."],
    ["Резервное питание", "активируется", "автоматически."],
    ["Система", "сохраняет", "последние настройки."],
    ["Робот", "восстанавливает", "работу после сбоя."],
    ["Данные", "передаются", "в сервисный центр."],

    ["Владелец", "может настроить", "характер собаки."],
    ["Система", "запоминает", "предпочтения пользователя."],
    ["Алгоритмы", "адаптируются", "под привычки хозяина."],
    ["Голосовые команды", "программируются", "индивидуально."],
    ["Робот", "учится распознавать", "членов семьи."],
    ["Поведение", "настраивается", "под каждого пользователя."],

    ["Система", "не работает", "при экстремальных температурах."],
    ["Робот", "избегает", "контакта с водой."],
    ["Конструкция", "требует", "бережного обращения."],

    ["Производитель", "обеспечивает", "годовую гарантию."],
    ["Сервисный центр", "выполняет", "ремонт."],
    ["Программное обеспечение", "обновляется", "бесплатно."],

    ["У робот-собаки", "есть", "3 уровня громкости: низкая, средняя, высокая."],
    ["Громкость", "изменяется", "переключением на дистанционном управлении кнопки громкость к желаемому уровню."],

    ["Робот", "выполняет", "команды пользователя быстро и точно."],
    ["Он", "реагирует", "на действия владельца через сенсоры и жесты."],
    ["Система", "настроена", "для выполнения нескольких команд одновременно."],

    ["Аккумулятор", "заряжается", "быстро и эффективно."],
    ["Он", "может работать", "до 12 часов без подзарядки."],
    ["Владелец", "всегда может проверить", "уровень заряда через приложение."],

    ["Сервисный центр", "работает", "круглосуточно."],
    ["Он", "предлагает", "бесплатный ремонт в течение года после покупки."],
    ["Специалисты", "проводят", "диагностику и замену поврежденных частей робота."],

    ["Робот", "использует", "сенсоры для выявления объектов."],
    ["Он", "распознает", "преграды и корректирует движение."],
    ["Все данные", "передаются", "в систему для анализа."],

    ["Владелец", "может настроить", "поведение робота."],
    ["Он", "выбирает", "предпочтительные команды и реакции."],
    ["Алгоритмы", "системы", "адаптируются к индивидуальным предпочтениям."],

    ["Робот", "может оставаться", "в режиме ожидания."],
    ["Он", "реагирует", "на окружающие звуки и движения."],
    ["Когда система", "активируется", "он быстро переключается в рабочий режим."],

    ["Робот", "может оповещать", "владельца о событиях."],
    ["Он", "использует", "звуковые сигналы и визуальные индикаторы."],
    ["Все уведомления", "отображаются", "на экране мобильного приложения."],

    ["Робот", "автоматически включает", "режим безопасности."],
    ["Он", "блокирует", "доступ к чувствительным данным и настройкам."],
    ["Все действия пользователя", "фиксируются", "и записываются."],

    ["Робот", "реагирует", "на голосовые команды владельца."],
    ["Он", "может выполнять", "базовые команды и жесты."],
    ["Система", "анализирует", "эмоции хозяина и подстраивает поведение."]
];

var questions = [
    "Как активируется робот-собака?",
    "Как пользователь должен активировать робота?",
    "Сколько времени занимает запуск системы робота?",
    "Какой цвет загорается на индикаторе при активации робота?",
    "Что начинают делать глаза робота при активации?",
    "Что происходит с механизмами робота после активации?",
    "Как узнать, что батарея робота исчерпана?",

    "Что делает кнопка 'Вперед' на пульте?",
    "Как управлять направлением робота с помощью джойстика?",
    "Что делают триггеры на пульте робота?",
    "Как переводить робота в положение 'сидеть' с пульта?",
    "Какая кнопка активирует команду 'лежать' у робота?",
    "Какая кнопка возвращает робота в стоячее положение?",

    "Как двигаться вперед с помощью клавиатуры?",
    "Какая клавиша активирует движение назад?",
    "Какие клавиши поворачивают робота влево и вправо?",
    "Как перевести робота в режим сидения с помощью клавиатуры?",
    "Какая клавиша укладывает робота на пол?",
    "Какая клавиша поднимает робота в стоячее положение?",

    "Что такое автономный режим у робота?",
    "Как система следует за владельцем?",
    "Какие алгоритмы обеспечивают безопасное передвижение робота?",
    "Что такое режим охраны у робота?",
    "Как работают сенсоры робота в режиме охраны?",
    "Как система оповещает владельца о нарушениях?",

    "Как глаза робота отображают текущий заряд?",
    "Что происходит, если глаза робота сломались?",
    "Как уши робота передают эмоциональное состояние?",
    "Как положение ушей зависит от режима работы?",
    "Что имитируют движения робота?",

    "Как владельцу очищать сенсоры робота?",
    "Что требует система робота ежемесячно?",
    "Как обновления устанавливаются у робота?",
    "Как происходит беспроводная зарядка робота?",
    "Сколько времени занимает зарядка робота?",
    "Сколько времени робот может работать на полном заряде?",

    "Что делает тройное касание носа робота?",
    "Что происходит при длительном удержании уха робота?",
    "Как активируется резервное питание у робота?",
    "Что сохраняет система робота?",
    "Что происходит с роботом после сбоя?",
    "Что происходит с данными робота при сбое?",

    "Как владелец может настроить характер робота?",
    "Как система запоминает предпочтения пользователя?",
    "Как алгоритмы робота адаптируются под привычки хозяина?",
    "Как настраиваются голосовые команды робота?",
    "Как робот учится распознавать членов семьи?",
    "Как поведение робота настраивается под каждого пользователя?",

    "При каких условиях система не работает?",
    "Что происходит, если робот контактирует с водой?",
    "Как нужно обращаться с конструкцией робота?",

    "Какую гарантию предоставляет производитель робота?",
    "Что делает сервисный центр робота?",
    "Что обновляется бесплатно у робота?",

    "Какие уровни громкости есть у робота?",
    "Как изменяется громкость на дистанционном управлении?",

    "Как робот выполняет команды пользователя?",
    "Как робот реагирует на действия владельца?",
    "Как система настроена для выполнения нескольких команд одновременно?",

    "Как аккумулятор робота заряжается?",
    "Сколько времени робот может работать без подзарядки?",
    "Как проверить уровень заряда робота?",

    "Как работает сервисный центр для робота?",
    "Какие услуги предоставляет сервисный центр робота?",
    "Что делают специалисты сервисного центра?",

    "Как робот использует сенсоры для выявления объектов?",
    "Как робот распознает преграды?",
    "Что происходит с данными робота?",

    "Как настроить поведение робота?",
    "Как выбрать предпочтительные команды для робота?",
    "Как алгоритмы робота адаптируются к предпочтениям пользователя?",

    "Как робот остается в режиме ожидания?",
    "Как робот реагирует на звуки и движения?",
    "Как система активирует робота в рабочий режим?",

    "Как робот оповещает владельца о событиях?",
    "Как робот использует визуальные индикаторы?",
    "Где отображаются уведомления робота?",

    "Как робот включает режим безопасности?",
    "Как робот блокирует доступ к данным?",
    "Что фиксирует система робота?",

    "Как робот реагирует на голосовые команды?",
    "Какие базовые команды робот выполняет?",
    "Как система робота анализирует эмоции хозяина?"
];